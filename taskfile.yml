version: "3"

vars:
  LAMBDAS: ["discovery", "retrieval", "scan"]
  CMD_DIR: "cmd"

tasks:
  build:
    desc: "Build all Lambda functions"
    cmds:
    - for:
        var: LAMBDAS
      cmd: |
          echo "Building Lambda: bin/{{.ITEM}}/bootstrap {{.CMD_DIR}}/{{.ITEM}}/main.go"
          GOOS=linux GOARCH=amd64 go build -o bin/{{.ITEM}}/bootstrap {{.CMD_DIR}}/{{.ITEM}}/main.go
    - cp clientLibraryConfig-awswoz.json bin/discovery/
    sources:
      - "{{.CMD_DIR}}/**/main.go"
    generates:
      - "{{.CMD_DIR}}/**/bootstrap"

  package:
    desc: "Zip all Lambda functions"
    deps: [build]
    cmds:
      - for:
          var: LAMBDAS
        cmd: |
          if [ "{{.ITEM}}" == "discovery" ]; then
            zip -j bin/{{.ITEM}}/bootstrap.zip bin/{{.ITEM}}/bootstrap bin/discovery/clientLibraryConfig-awswoz.json
          else
            zip -j bin/{{.ITEM}}/bootstrap.zip bin/{{.ITEM}}/bootstrap
          fi
  

  # upload:
  #   desc: "Upload all Lambda functions to s3"
  #   deps: [package]
  #   cmds:
  #     - for:
  #         var: LAMBDAS
  #       cmd: |
  #         aws s3 cp bin/{{.ITEM}}/bootstrap.zip s3://cs464-lambda-s3/{{.ITEM}}/bootstrap.zip

  # deploy:
  #   desc: "Deploy all Lambda functions to AWS"
  #   deps: [package]
  #   cmds:
  #     - |
  #       for lambda in {{.LAMBDAS}}; do
  #         aws lambda update-function-code --function-name $lambda --zip-file fileb://{{.CMD_DIR}}/$lambda.zip
  #       done


  clean:
    desc: "Clean build artifacts"
    cmds:
      - rm -f {{.CMD_DIR}}/**/bootstrap {{.CMD_DIR}}/*.zip